mdl 1.3;

import ::adobe::mtl::standard;
import ::anno::*;
import ::base::file_texture;
import ::base::mono_mode;
import ::base::rotation_translation_scale;
import ::base::tangent_space_normal_texture;
import ::base::texture_coordinate_info;
import ::base::texture_return;
import ::base::transform_coordinate;
import ::state::texture_coordinate;
import ::state::texture_tangent_u;
import ::state::texture_tangent_v;
import ::tex::gamma_mode;
import ::tex::wrap_mode;
import ::state::normal;


export material MATERIAL_BARRIER(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("barrier_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("barrier_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("barrier_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("barrier_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("barrier_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("barrier_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_CEILING(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("ceiling_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("ceiling_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("ceiling_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("ceiling_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("ceiling_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("ceiling_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_COLLECTIBLESTAND(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("collectiblestand_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("collectiblestand_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("collectiblestand_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("collectiblestand_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("collectiblestand_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("collectiblestand_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_FLOOR(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("floor_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("floor_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("floor_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("floor_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("floor_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("floor_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SPRINGFOUNTAINBARRIER(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("springfountainbarrier_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("springfountainbarrier_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("springfountainbarrier_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("springfountainbarrier_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("springfountainbarrier_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("springfountainbarrier_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SPRINGHILLS(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("springhills_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("springhills_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("springhills_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("springhills_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("springhills_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("springhills_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SPRINGPLATFORM1(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("springplatform1_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("springplatform1_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("springplatform1_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("springplatform1_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("springplatform1_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("springplatform1_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SPRINGPLATFORM2(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("springplatform2_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("springplatform2_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("springplatform2_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("springplatform2_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("springplatform2_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("springplatform2_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SPRINGPLATFORM3(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("springplatform3_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("springplatform3_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("springplatform3_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("springplatform3_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("springplatform3_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("springplatform3_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SPRINGPLATFORM4(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("springplatform4_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("springplatform4_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("springplatform4_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("springplatform4_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("springplatform4_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("springplatform4_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SPRINGWALL3(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("springwall3_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("springwall3_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("springwall3_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("springwall3_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("springwall3_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("springwall3_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SPRINGWALL4(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("springwall4_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("springwall4_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("springwall4_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("springwall4_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("springwall4_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("springwall4_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SPRINGWATER1(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("springwater1_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("springwater1_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("springwater1_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("springwater1_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("springwater1_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("springwater1_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_WALLS(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("walls_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("walls_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("walls_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("walls_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("walls_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("walls_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_WATERMIDDLESPRING(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("watermiddlespring_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
roughness: ::base::file_texture(
	texture: texture_2d("watermiddlespring_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
metallic: ::base::file_texture(
	texture: texture_2d("watermiddlespring_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("watermiddlespring_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
glow: ::base::file_texture(
	texture: texture_2d("watermiddlespring_glow.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("watermiddlespring_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_WATER(*)
= ::adobe::mtl::standard(
	
);

